f
dim(Xest)
plot(Xest)
load("/data/ipapasta/biased/Xbeta20.RData")
a
plot(a)
for(i in 1:100){
    coords  <- matrix(rep(c(i,100-i), 1000), byrow=T, ncol=2)
    theta.seq <- seq(0.1, 2*pi, len=1000)
    ## coords  <- matrix(rep(c(33, 64), 100), byrow = TRUE, ncol=2)
    order.HD <- 3
    ## proj.s.pred  <- inla.mesh.projector(mesh, loc=matrix(coords, nrow=1))
    proj.s.pred  <- inla.mesh.projector(mesh, loc=as.matrix(coords))
    Aosc.pred      <- proj.s.pred$proj$A
    Ahd.pred       <- circular.make.A(theta.seq, order=order.HD)
    ## Ahd.pred       <- circular.make.A(rep(pi, dim(coords)[1]), order=order.HD)
    one.vec <- matrix(rep(1, length(theta.seq)), ncol=1)
    ## Ahd.pred       <- circular.make.A(seq(0.2, 2*pi-0.2, length = 100), order=order.HD)
    ## ---------------------------------------------------------------
    Apred    <- inla.row.kron(Ahd.pred, Aosc.pred)
    lambdapred  <- exp(matrix((as.numeric(beta)*one.vec), ncol=1) + Apred%*%Xest)
    loglambdapred  <- Apred%*%Xest
    ## grid(00, 100, lwd = 2)
    ## %>% unlist %>% as.numeric %>% exp## matrix(Apred %*% X + Bpred %*% beta) %>% unlist %>% as.numeric %>% exp 
    lines(theta.seq, as.numeric(loglambdapred), add=TRUE)
}
data$Ypos$Li
dim(Ypos)
names(Ypos)
str(Ypos$hdi)
Ypos$hdi[[1]]
Ypos$hdi[[2]]
Ypos$hdi[2:10]
Ypos$hdi[2:100]
Ypos$Li[2:100]
plot(L)
plot(W, W.old)
exp(-1)
exp(-3)
exp(-1)
exp(-1.5)
exp(0)
exp(-4)
exp(-45)
exp (-4.5)
log(pi)
exp(1.4)
exp(1.5)
load("/data/ipapasta/biased/Xbeta7.RData")
p
exp(-5)
exp(1.4)
exp(2)
exp(1.8)
load("/data/ipapasta/biased/Xbeta2.RData")
load("/data/ipapasta/biased/Xbeta2.RData")
load("/data/ipapasta/biased/Xbeta15.RData")
for(i in 1:100){
    coords  <- matrix(rep(c(i,100-i), 1000), byrow=T, ncol=2)
    theta.seq <- seq(0.1, 2*pi, len=1000)
    ## coords  <- matrix(rep(c(33, 64), 100), byrow = TRUE, ncol=2)
    order.HD <- 3
    ## proj.s.pred  <- inla.mesh.projector(mesh, loc=matrix(coords, nrow=1))
    proj.s.pred  <- inla.mesh.projector(mesh, loc=as.matrix(coords))
    Aosc.pred      <- proj.s.pred$proj$A
    Ahd.pred       <- circular.make.A(theta.seq, order=order.HD)
    ## Ahd.pred       <- circular.make.A(rep(pi, dim(coords)[1]), order=order.HD)
    one.vec <- matrix(rep(1, length(theta.seq)), ncol=1)
    ## Ahd.pred       <- circular.make.A(seq(0.2, 2*pi-0.2, length = 100), order=order.HD)
    ## ---------------------------------------------------------------
    Apred    <- inla.row.kron(Ahd.pred, Aosc.pred)
    lambdapred  <- exp(matrix((as.numeric(beta)*one.vec), ncol=1) + Apred%*%Xest)
    loglambdapred  <- Apred%*%Xest
    ## grid(00, 100, lwd = 2)
    ## %>% unlist %>% as.numeric %>% exp## matrix(Apred %*% X + Bpred %*% beta) %>% unlist %>% as.numeric %>% exp 
    lines(theta.seq, as.numeric(loglambdapred), add=TRUE)
} 
for(i in 1:100){
    coords  <- matrix(rep(c(i,100-i), 1000), byrow=T, ncol=2)
    theta.seq <- seq(0.1, 2*pi, len=1000)
    ## coords  <- matrix(rep(c(33, 64), 100), byrow = TRUE, ncol=2)
    order.HD <- 3
    ## proj.s.pred  <- inla.mesh.projector(mesh, loc=matrix(coords, nrow=1))
    proj.s.pred  <- inla.mesh.projector(mesh, loc=as.matrix(coords))
    Aosc.pred      <- proj.s.pred$proj$A
    Ahd.pred       <- circular.make.A(theta.seq, order=order.HD)
    ## Ahd.pred       <- circular.make.A(rep(pi, dim(coords)[1]), order=order.HD)
    one.vec <- matrix(rep(1, length(theta.seq)), ncol=1)
    ## Ahd.pred       <- circular.make.A(seq(0.2, 2*pi-0.2, length = 100), order=order.HD)
    ## ---------------------------------------------------------------
    Apred    <- inla.row.kron(Ahd.pred, Aosc.pred)
    lambdapred  <- exp(matrix((as.numeric(beta)*one.vec), ncol=1) + Apred%*%Xest)
    loglambdapred  <- Apred%*%Xest
    ## grid(00, 100, lwd = 2)
    ## %>% unlist %>% as.numeric %>% exp## matrix(Apred %*% X + Bpred %*% beta) %>% unlist %>% as.numeric %>% exp 
    lines(theta.seq, as.numeric(loglambdapred), add=TRUE)
} 
for(i in 1:100){
    coords  <- matrix(rep(c(i,100-i), 1000), byrow=T, ncol=2)
    theta.seq <- seq(0.1, 2*pi, len=1000)
    ## coords  <- matrix(rep(c(33, 64), 100), byrow = TRUE, ncol=2)
    order.HD <- 3
    ## proj.s.pred  <- inla.mesh.projector(mesh, loc=matrix(coords, nrow=1))
    proj.s.pred  <- inla.mesh.projector(mesh, loc=as.matrix(coords))
    Aosc.pred      <- proj.s.pred$proj$A
    Ahd.pred       <- circular.make.A(theta.seq, order=order.HD)
    ## Ahd.pred       <- circular.make.A(rep(pi, dim(coords)[1]), order=order.HD)
    one.vec <- matrix(rep(1, length(theta.seq)), ncol=1)
    ## Ahd.pred       <- circular.make.A(seq(0.2, 2*pi-0.2, length = 100), order=order.HD)
    ## ---------------------------------------------------------------
    Apred    <- inla.row.kron(Ahd.pred, Aosc.pred)
    lambdapred  <- exp(matrix((as.numeric(beta)*one.vec), ncol=1) + Apred%*%Xest)
    loglambdapred  <- Apred%*%Xest
    ## grid(00, 100, lwd = 2)
    ## %>% unlist %>% as.numeric %>% exp## matrix(Apred %*% X + Bpred %*% beta) %>% unlist %>% as.numeric %>% exp 
    lines(theta.seq, exp(as.numeric(loglambdapred)), ylim=c(0,1))
} 
exp(0)
exp(1)
exp(1.1)
exp(1.14)
exp(pi)
log(pi)
exp(-1)
exp(-2)
exp(0)
sqrt(2)
log(1)
list.files("/home/ipapasta/R/x86_64-redhat-linux-gnu-library/3.5/")
install.packages(list.files("/home/ipapasta/R/x86_64-redhat-linux-gnu-library/3.5/"))
yes
yes
install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("rgdal")
library(rgdal)
plot(mesh)
plot(mesh, asp=1)
