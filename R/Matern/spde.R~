source("load_data.R")
library(tidyverse)
library(purrr)
library(INLA)
library(inlabru)

data("gorillas", package = "inlabru")
gonests <- gorillas$nests
goboundary <- gorillas$boundary
mycoords   <- SpatialPoints(cbind(Y$position_x_pixels, Y$position_y_pixels))


Pl <- Polygon(cbind(X$position_x_pixels, X$position_y_pixels))
## tmp <- SpatialPolygons(Srl=list(tmp))
## SpatialPolygonsDataFrame(list(tmp))

ID <- "[0,1]x[0,1]"
Pls <- Polygons(list(Pl), ID=ID)
# str(Pls)
SPls <- SpatialPolygons(list(Pls))
# str(SPls)
df <- data.frame(value=1, row.names=ID)
# str(df)
SPDF       <- SpatialPolygonsDataFrame(SPls, df)                                         # str(df)
trajectory <- SpatialPolygonsDataFrame(SPls, df) 

plot(trajectory)
points(mycoords, pch=16, col="red")


mesh <- inla.mesh.2d(mycoords, max.edge=0.1, cutoff=0.05)

plot(mesh, asp=1)
points(mycoords)

ggplot() + gg(mesh) + gg(mycoords) + coord_fixed() + ggtitle("Firing events")


## specify correlation structure
boundary.samplers <- SpatialPointsDataFrame(coords=cbind(c(0, 0, 1, 1), c(0, 1, 0, 1)), data=data.frame(cbind(c(0, 0, 1, 1), c(0, 1, 0, 1))))
## SpatialPolygons(list(Polygons(list(Polygon(cbind(c(0, 0, 1, 1), c(0, 1, 0, 1)))), ID="[0,1]x[0,1]")))
mycoordsdf        <- SpatialPointsDataFrame(coords=cbind(Y$position_x_pixels, Y$position_y_pixels), data=Y)




matern <- inla.spde2.pcmatern(mesh, 
                              prior.sigma = c(.5, 0.01), 
                              prior.range = c(0.5, 0.01))

cmp    <- coordinates ~ mySmooth(map = coordinates,
                                 model = matern) +
    Intercept

fit    <- lgcp(cmp, mycoordsdf, samplers=boundary.samplers)

lambda <- predict(fit, pixels(mesh), ~ exp(mySmooth + Intercept))

loglambda <- predict(fit, pixels(mesh), ~ mySmooth + Intercept)

colsc <- function(...) {
  scale_fill_gradientn(colours = rev(RColorBrewer::brewer.pal(11,"RdYlBu")),
                       limits = range(..., na.rm=TRUE))
}

pl1 <- ggplot() + 
    gg(lambda) + 
    gg(boundary.samplers) +
    gg(mycoords) +
    ggtitle("LGCP fit to Points", subtitle = "(Response Scale)") + 
    coord_fixed() +
    colsc(lambda$median)

pl2 <- ggplot() + 
    gg(loglambda) + 
    gg(boundary.samplers) +
    ## gg(mycoords) +
    ggtitle("LGCP fit to Points", subtitle = "(Linear Predictor Scale)") + 
    coord_fixed() +
    colsc(loglambda$median)

multiplot(pl1, pl2, cols = 2)

